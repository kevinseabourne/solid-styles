name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  # Test across multiple environments
  test:
    name: Test (Node ${{ matrix.node }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['18', '20', '21']
        os: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
          # Skip Windows on Node 21 to reduce CI time
          - os: windows-latest
            node: '21'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run type checking
        run: pnpm run type-check

      - name: Run tests
        run: pnpm test -- --coverage --reporter=verbose

      - name: Run build
        run: pnpm run build

      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node == '20' && github.repository_owner == 'actions'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  # Bundle size monitoring
  bundle-size:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check bundle size
        run: pnpm run size-limit
        env:
          CI: true

  # Security scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: typescript, javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Automated publishing on version tags
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, bundle-size, security]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm run build

      - name: Run final tests
        run: pnpm test

      - name: Publish to NPM
        if: startsWith(github.ref, 'refs/tags/v') && github.repository_owner != 'dependabot[bot]'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Changes in this Release
            
            See [CHANGELOG.md](./CHANGELOG.md) for detailed changes.
            
            ### Installation
            ```bash
            # Using pnpm (recommended)
            pnpm add solid-styles@${{ github.ref_name }}
            
            # Using npm
            npm install solid-styles@${{ github.ref_name }}
            
            # Using yarn  
            yarn add solid-styles@${{ github.ref_name }}
            
            # Using bun
            bun add solid-styles@${{ github.ref_name }}
            ```
            
            ### Package Stats
            - ðŸŽ¯ **100% Test Coverage**
            - âš¡ **Zero Runtime CSS-in-JS**
            - ðŸŒŠ **Spring Physics Animations**
            - ðŸ“± **SSR Ready**
          draft: false
          prerelease: false

  # Dependabot auto-merge for minor updates
  dependabot:
    name: Dependabot Auto-Merge
    runs-on: ubuntu-latest
    needs: [test]
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    
    steps:
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
